# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rq < Formula
  desc "Resource Query cli"
  homepage "https://github.com/dotnetmentor/rq"
  version "0.2.0"
  license "Apache License 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.0/rq_v0.2.0_darwin_arm64.zip"
      sha256 "47d053928aa43307a8b0d9a49318c7d01f0d67d8afcb62d90ddfb5e4b0daaa1c"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.0/rq_v0.2.0_darwin_amd64.zip"
      sha256 "7f90118227b0d27296bb48c167616247a2cf54b0892b96e31738990254a46d66"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.0/rq_v0.2.0_linux_arm64.tar.gz"
      sha256 "b17a6493d915ba2aee1327a0dea17ac179a141d46d98d6be161a291fe6208a74"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.0/rq_v0.2.0_linux_amd64.tar.gz"
      sha256 "9ad433b3accdf209e7fdcb8d39d7da730916a954b0b62bbe9a2e39cc49ab9540"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end
end
