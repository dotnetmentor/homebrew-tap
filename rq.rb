# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rq < Formula
  desc "Resource Query cli"
  homepage "https://github.com/dotnetmentor/rq"
  version "0.1.0"
  license "Apache License 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.1.0/rq_v0.1.0_darwin_arm64.zip"
      sha256 "e9df319fee0f9f1f205726e9979021f4747f80fc0a71d25f115d79e594029264"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.1.0/rq_v0.1.0_darwin_amd64.zip"
      sha256 "04fe603f0ee09ea97251a77c154959c9d1cbba567fc63616a54e41061165387f"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.1.0/rq_v0.1.0_linux_arm64.tar.gz"
      sha256 "88d801718a7cdb68de3f693a9add5c100e0c83519dacb8e6978f602e1f3bac61"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.1.0/rq_v0.1.0_linux_amd64.tar.gz"
      sha256 "f5841a325e27697dbae28e4540987445c6d9223ef6bfe79afc2363fa11f21ac9"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end
end
