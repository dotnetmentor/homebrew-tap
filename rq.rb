# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Rq < Formula
  desc "Resource Query cli"
  homepage "https://github.com/dotnetmentor/rq"
  version "0.2.1"
  license "Apache License 2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.1/rq_v0.2.1_darwin_arm64.zip"
      sha256 "df205e5e40c44d27e14f4ab652d0fa6113ce23682a5df12d12c437946486d458"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.1/rq_v0.2.1_darwin_amd64.zip"
      sha256 "ba8277eef07ae0749bdffeda228c37a0564620ceb89328c53cc91972cfc055b4"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.1/rq_v0.2.1_linux_arm64.tar.gz"
      sha256 "46dfe92971617b308097ea0bdae4c73fbbe0968d2ccc079f0a751d4174ca504a"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dotnetmentor/rq/releases/download/v0.2.1/rq_v0.2.1_linux_amd64.tar.gz"
      sha256 "cd6298826f000769f75834d489120ba093dcb852f9518ca2c1382c3eb8ccd9a8"

      def install
        bin.install 'rq'
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'bash')
        (bash_completion/'rq').write output
        output = Utils.safe_popen_read("#{bin}/rq", 'completion', 'zsh')
        (zsh_completion/'_rq').write output
      end
    end
  end
end
